#User-defined values for ML build system
#Copy me to Makefile.user, keeping ONLY the options that you want to customize

UNAME:=space928

ifeq ($(UNAME), Darwin)
	# Variable declaration for Mac OS X
	UMOUNT=hdiutil eject
	CF_CARD="/Volumes/EOS_DIGITAL"
	STAT_CMD=stat -f "%N: %z bytes"
else
	# Default settings for remaining operating systems
	UMOUNT=umount
	# some distros may require:
	# UMOUNT=sudo umount
	# CF_CARD=/media/EOS_DIGITAL
	# CF_CARD = $(call eval_once,CF_CARD,$(shell mount | grep -oE "[^ ]+/EOS_DIGITAL[^ ]*"))
  CF_CARD=/mnt/f
	STAT_CMD=stat -c "%n: %s bytes"
endif

INSTALL_DIR=$(call eval_once,INSTALL_DIR,$(realpath $(PLATFORM_DIR)/~install))
define INSTALL_PREPARE=
  mkdir -p $(PLATFORM_DIR)/~install
endef
define INSTALL_FINISH=
  $(CP) $(INSTALL_DIR) $(CF_CARD)
endef

# change this if you have to mount the card every time you run "make install"
# examples:
# MOUNT_CARD=gio mount -d /dev/mmcblk0p1
# MOUNT_CARD=gio mount dav://192.168.0.1/
MOUNT_CARD=

# You can customize CFLAG here
HOST_CFLAGS=-g -O3 -W -Wall -fms-extensions -std=c99 
HOST_LFLAGS=
HOST_LIBS=

# large file support
# you can also get them with $(shell getconf LFS_CFLAGS)
HOST_LFS_FLAGS=-DLARGEFILES -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 

#
# Additional binaries
#
CCACHE=ccache
GREP=grep
MV=mv
AWK=awk
PYTHON=python3
PYTHON3=python3
RST2LATEX=rst2latex.py

#
# QEMU installation directory
# used for "make install_qemu"
#
QEMU_DIR ?= qemu-eos
QEMU_PATH=$(TOP_DIR)/../$(QEMU_DIR)

# Naming convention for Magic Lantern builds:
# General rules:
# - Always specify the camera and its firmware version number in the build name (e.g. 550d.fw109)
# - For non-release builds, specify the build date and author's (nick)name.
# - For experimental builds, add a short keyword indicating the particular feature tested.

# Examples for experimental builds:
# magiclantern-2010dec07.550d.fw108.cropmarks.a1ex.zip 
# magiclantern-2010nov23.550d.fw108.selectable-audio.piers.zip 

# Example for pre-release builds:
# magiclantern-2010dec17.550d.fw109.PRERELEASE.alex.zip

# Release builds:
# magiclantern-0.2.0.rc1.550d.fw109.zip
#~ VERSION=0.2.0.rc1.550d.fw109
BUILDVER=space928.$(shell hg id -i -r .)
VERSION = $(call eval_once,VERSION,Nightly.$(shell LC_TIME=EN date +'%Y%b%d').$(MODEL)$(FW_VERSION))

# Build configuration - untested and debug stuff handy for devs
# these can be specified either in Makefile.user, or in the command line:
# 
#   make clean; make CONFIG_QEMU=y

# FIXME: you will need to use "make clean" before recompiling with different options.

CONFIG_PTP          = n
CONFIG_PTP_CHDK     = n
CONFIG_PTP_ML       = n
CONFIG_GDB          = n
CONFIG_GDBSTUB      = n
CONFIG_CONSOLE      = y
CONFIG_DEBUGMSG     = 0
CONFIG_CCACHE       = n
CONFIG_TCC          = y
CONFIG_MODULES      = y
CONFIG_TINYPY       = n

# Work in progress - attempt to emulate both Canon firmware and autoexec.bin
# Emulation should work without having to enable CONFIG_QEMU, 
# but this may enable workarounds for some corner cases,
# or some extra tools or tests not meant to be run on the actual camera.
CONFIG_QEMU         = n

# Work in progress - load ML as position-independent code (PIC)
CONFIG_PIC          = n



# enable to save preprocessed C files (*.i)
# this applies to modules as well (but CONFIG entries are not)
PREPRO              = n

# enable to turn off things not understood by pycparser
# for static analysis only; do not execute the resulting code!
# this applies to modules as well (but CONFIG entries are not)
PYCPARSER           = n
